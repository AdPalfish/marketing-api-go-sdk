/*
 * Marketing API
 *
 * Marketing API
 *
 * API version: 1.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package main

import (
	"encoding/json"
	"fmt"

	"github.com/tencentad/marketing-api-go-sdk/pkg/ads"
	"github.com/tencentad/marketing-api-go-sdk/pkg/api"
	"github.com/tencentad/marketing-api-go-sdk/pkg/config"
	"github.com/tencentad/marketing-api-go-sdk/pkg/errors"
)

type AuthorizationWechatBindExample struct {
	TAds                        *ads.SDKClient
	AccessToken                 string
	RedirectUri                 string
	AuthorizationWechatBindOpts *api.AuthorizationWechatBindOpts
}

func (e *AuthorizationWechatBindExample) Init() {
	e.AccessToken = "YOUR ACCESS TOKEN"
	e.TAds = ads.Init(&config.SDKConfig{
		AccessToken: e.AccessToken,
		IsDebug:     true,
	})
	e.RedirectUri = "redirectUri_example"
	e.AuthorizationWechatBindOpts = &api.AuthorizationWechatBindOpts{}
}

func (e *AuthorizationWechatBindExample) RunExample() {
	tads := e.TAds
	// change ctx as needed
	ctx := *tads.Ctx
	response, httpResponse, err := tads.Authorization().WechatBind(ctx, e.AccessToken, e.RedirectUri, e.AuthorizationWechatBindOpts)

	if err != nil {
		if resErr, ok := err.(errors.ResponseError); ok {
			errStr, _ := json.Marshal(resErr)
			fmt.Println("Resopnse error:", string(errStr))
		} else {
			fmt.Println("Error:", err)
		}
	}
	fmt.Println("Response data:", response)
	fmt.Println("Http response:", httpResponse)
}

func main() {
	e := &AuthorizationWechatBindExample{}
	e.Init()
	e.RunExample()
}
